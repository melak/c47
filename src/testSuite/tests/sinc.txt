;*************************************************************
;*************************************************************
;**                                                         **
;**                          sinc                           **
;**                                                         **
;*************************************************************
;*************************************************************
In: FL_SPCRES=0 FL_CPXRES=0 SD=0 RM=0 IM=2compl SS=4 WS=64
Func: fnSinc



;=======================================
; sinc(Long Integer) --> Real
;=======================================
In:  AM=RAD FL_ASLIFT=0 FL_CPXRES=0 RX=LonI:"0"
Out: EC=0 FL_CPXRES=0 FL_ASLIFT=1 RL=LonI:"0" RX=Real:"1"

In:  AM=DEG FL_ASLIFT=0 FL_CPXRES=0 RX=LonI:"5"
Out: EC=0 FL_CPXRES=0 FL_ASLIFT=1 RL=LonI:"5" RX=Real:"-0.19178485493262769377863088123119879467049230879292035562633449"

In:  AM=GRAD FL_ASLIFT=0 FL_CPXRES=0 RX=LonI:"3605"
Out: EC=0 FL_CPXRES=0 FL_ASLIFT=1 RL=LonI:"3605" RX=Real:"-2.773227345265317836741620645525372885962241050858749308087273e-4"

In:  AM=MULTPI FL_ASLIFT=0 FL_CPXRES=0 RX=LonI:"-3595"
Out: EC=0 FL_CPXRES=0 FL_ASLIFT=1 RL=LonI:"-3595" RX=Real:"2.3673486530967767910288309691933884772952737250010154424133257e-4"

; TODO precision issue with the following 2 tests
;In:  AM=DMS FL_ASLIFT=0 FL_CPXRES=0 RX=LonI:"10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001"
;Out: EC=0 FL_CPXRES=0 FL_ASLIFT=1 RL=LonI:"10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001" RX=Real:"-9.8214967290998629098908424008856927237133020712239516295038480e-101"

;In:  AM=RAD FL_ASLIFT=0 FL_CPXRES=0 RX=LonI:"-314159265358979323846264338327950300314159265358979323846264338327950"
;Out: EC=0 FL_CPXRES=0 FL_ASLIFT=1 RL=LonI:"-314159265358979323846264338327950300314159265358979323846264338327950" RX=Real:"8.432627460091914023652224150252174926105027662760453388422806e-70"



;=======================================
; sinc(Time)
;=======================================



;=======================================
; sinc(Date)
;=======================================



;=======================================
; sinc(String) --> Error24
;=======================================
In:  FL_ASLIFT=0 RX=Stri:"String test"
Out: EC=24 FL_ASLIFT=0 RX=Stri:"String test"



;=======================================
; sinc(Real Matrix)
;=======================================
In:  AM=RAD FL_ASLIFT=0 FL_CPXRES=0 RX=ReMa:"M2,3[0,-1,2,-3,4,-5]"
Out: EC=0 FL_CPXRES=0 FL_ASLIFT=1 RL=ReMa:"M2,3[0,-1,2,-3,4,-5]" RX=ReMa:"M2,3[1,0.841470984807896506652502321630298999623,0.454648713412840847698009932955872421351,0.0470400026866224073669149342693700932823,-0.189200623826982062843159773627957273534,-0.191784854932627693778630881231198794670]"



;=======================================
; sinc(Complex Matrix)
;=======================================
In:  AM=RAD FL_ASLIFT=0 FL_CPXRES=0 RX=CxMa:"M2,3[0,0i-1,2i-1,-3i2,4i3,-5i-4]"
Out: EC=0 FL_CPXRES=1 FL_ASLIFT=1 RL=CxMa:"M2,3[0,0i-1,2i-1,-3i2,4i3,-5i-4]" RX=CxMa:"M2,3[1,1.17520119364380145688238185059560081516,0.463436448440557500490505430197381993397i0.476246353740925587038479999372948957278,-0.429874301632769268324923894123661839029i0.910271995573413805120905886515831038379,-2.00485148016074583108995904014892885635i-0.13339140010719103862423347459713454294,-2.43824796609890462149894110602600429078i3.49882188352867177412431405145758431161]"



;=======================================
; sinc(Short Integer) --> Error24
;=======================================
In:  FL_ASLIFT=0 FL_CPXRES=0 RX=ShoI:"5#7"
Out: EC=24 FL_CPXRES=0 FL_ASLIFT=0 RX=ShoI:"5#7"



;=======================================
; sinc(Real) --> Real
;=======================================
In:  AM=RAD FL_ASLIFT=0 FL_CPXRES=0 RX=Real:"0"
Out: EC=0 FL_CPXRES=0 FL_ASLIFT=1 RL=Real:"0" RX=Real:"1"

In:  AM=RAD FL_ASLIFT=0 FL_CPXRES=0 RX=Real:"0.0001"
Out: EC=0 FL_CPXRES=0 FL_ASLIFT=1 RL=Real:"0.0001" RX=Real:"0.99999999833333333416666666646825396828152557318973464806814199"
;sinc(0.0001r): https://www.wolframalpha.com/input?i2d=true&i=sin%5C%2840%290.0001+radian%5C%2841%29+Divide%5B1%2C%5C%2840%290.0001%5C%2841%29%5D

In:  AM=DEG FL_ASLIFT=0 FL_CPXRES=0 RX=Real:"0.0001":RAD
Out: EC=0 FL_CPXRES=0 FL_ASLIFT=1 RL=Real:"0.0001":RAD RX=Real:"0.9999999983333333341666666664682539682815255731897346480681"
;sinc(0.0001r): https://www.wolframalpha.com/input?i2d=true&i=sin%5C%2840%290.0001+radian%5C%2841%29+Divide%5B1%2C0.0001%5D

In:  AM=GRAD FL_ASLIFT=0 FL_CPXRES=0 RX=Real:"0.0001":DEG
Out: EC=0 FL_CPXRES=0 FL_ASLIFT=1 RL=Real:"0.0001":DEG RX=Real:"0.999999999999492304300355562994232458671966591944724390948"
;sinc(0.0001/180*pi): https://www.wolframalpha.com/input?i2d=true&i=sin%5C%2840%29Divide%5B0.0001%2C180%5Dpi+radian%5C%2841%29+Divide%5B1%2C%5C%2840%29Divide%5B0.0001%2C180%5Dpi%5C%2841%29%5D

In:  AM=MULTPI FL_ASLIFT=0 FL_CPXRES=0 RX=Real:"0.0001"
Out: EC=0 FL_CPXRES=0 FL_ASLIFT=1 RL=Real:"0.0001" RX=Real:"0.99999999833333333416666666646825396828152557318973464806814199"
;sinc(0.0001r): https://www.wolframalpha.com/input?i2d=true&i=sin%5C%2840%290.0001+radian%5C%2841%29+Divide%5B1%2C%5C%2840%290.0001%5C%2841%29%5D



In:  AM=DMS FL_ASLIFT=0 FL_CPXRES=0 RX=Real:"0.3":RAD
Out: EC=0 FL_CPXRES=0 FL_ASLIFT=1 RL=Real:"0.3":RAD RX=Real:"0.9850673555377985836844024856167579122594403724753948283384"
;sinc(0.3r): https://www.wolframalpha.com/input?i2d=true&i=sin%5C%2840%290.3+radian%5C%2841%29+Divide%5B1%2C%5C%2840%290.3%5C%2841%29%5D


;using MULPI, the testsuite expects the REGISTER value is input, i.e. for MULPI, the radians value, with the tag additionally set. That is the TOTAL radians including multiplication factor pi
In:  AM=DMS FL_ASLIFT=0 FL_CPXRES=0 RX=Real:"0.3":MULTPI
Out: EC=0 FL_CPXRES=0 FL_ASLIFT=1 RL=Real:"0.3":MULTPI RX=Real:"0.9850673555377985836844024856167579"
;sinc(0.09549.. MULPI) = sinc((0.09549.. *pi)r): https://www.wolframalpha.com/input?i2d=true&i=sin%5C%2840%29%5C%2840%290.09549296585513720146133025802350861+*pi%5C%2841%29+radian%5C%2841%29+Divide%5B1%2C%5C%2840%290.09549296585513720146133025802350861+*+pi%5C%2841%29%5D 


In:  AM=DMS FL_ASLIFT=0 FL_CPXRES=0 RX=Real:"0.9424777960769379715387930149838508652591508198125317462924":MULTPI
Out: EC=0 FL_CPXRES=0 FL_ASLIFT=1 RL=Real:"0.9424777960769379715387930149838508652591508198125317462924":MULTPI RX=Real:"0.8583936913341397750121085026240264909203952627756910774069"
;sinc(0.3 MULPI) = sinc((0.3*pi)r): https://www.wolframalpha.com/input?i2d=true&i=sin%5C%2840%29%5C%2840%290.3+*pi%5C%2841%29+radian%5C%2841%29+Divide%5B1%2C%5C%2840%290.3+*+pi%5C%2841%29%5D

In:  AM=RAD FL_ASLIFT=0 FL_CPXRES=0 RX=Real:"999":DEG
Out: EC=0 FL_CPXRES=0 FL_ASLIFT=1 RL=Real:"999":DEG RX=Real:"-0.056647020410791957687541359230511768445868610690704808506874602"
;sinc(999/180*pi): https://www.wolframalpha.com/input?i2d=true&i=sin%5C%2840%29Divide%5B999%2C180%5Dpi+radian%5C%2841%29+Divide%5B1%2C%5C%2840%29Divide%5B999%2C180%5Dpi%5C%2841%29%5D

; NaN
In:  FL_ASLIFT=0 FL_CPXRES=0 RX=Real:"NaN":RAD
Out: EC=0 FL_CPXRES=0 FL_ASLIFT=1 RL=Real:"NaN":RAD RX=Real:"NaN"

In:  FL_ASLIFT=0 FL_CPXRES=0 RX=Real:"NaN"
Out: EC=0 FL_CPXRES=0 FL_ASLIFT=1 RL=Real:"NaN" RX=Real:"NaN"

; Infinity
In:  FL_ASLIFT=0 FL_CPXRES=0 FL_SPCRES=1 RX=Real:"inf":DEG
Out: EC=0 FL_CPXRES=0 FL_ASLIFT=1 RL=Real:"inf":DEG RX=Real:"0"

In:  FL_ASLIFT=0 FL_CPXRES=0 FL_SPCRES=1 RX=Real:"inf":MULTPI
Out: EC=0 FL_CPXRES=0 FL_ASLIFT=1 RL=Real:"inf":MULTPI RX=Real:"0"

In:  FL_ASLIFT=0 FL_CPXRES=0 FL_SPCRES=1 RX=Real:"-inf":RAD
Out: EC=0 FL_CPXRES=0 FL_ASLIFT=1 RL=Real:"-inf":RAD RX=Real:"0"

In:  FL_ASLIFT=0 FL_CPXRES=0 FL_SPCRES=1 RX=Real:"inf"
Out: EC=0 FL_CPXRES=0 FL_ASLIFT=1 RL=Real:"inf" RX=Real:"0"

In:  FL_ASLIFT=0 FL_CPXRES=0 FL_SPCRES=1 RX=Real:"inf"
Out: EC=0 FL_CPXRES=0 FL_ASLIFT=1 RL=Real:"inf" RX=Real:"0"

In:  FL_ASLIFT=0 FL_CPXRES=0 FL_SPCRES=1 RX=Real:"-inf"
Out: EC=0 FL_CPXRES=0 FL_ASLIFT=1 RL=Real:"-inf" RX=Real:"0"


;=======================================
; sinc(Complex) --> Complex
;=======================================
In:  AM=RAD FL_ASLIFT=0 FL_CPXRES=0 RX=Cplx:"6.2 i -7.6"
Out: EC=0 FL_CPXRES=1 FL_ASLIFT=1 RL=Cplx:"6.2 i -7.6" RX=Cplx:"73.30765508782941569717089533225506 i -70.72657028341247985391812865164582"
